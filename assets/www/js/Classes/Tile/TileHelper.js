var TileHelper = Class.create({	initialize:function()	{		//this.DALHelper=new DAL("MrPreneur","1.0",100000);	},	DALHelper:null,			testMethod:function()	{		var self=this;		new DAL().executeQuery("write query here",function(result){self.successCreate(result);});	},	testSuccess:function(result)	{		//result.rows.item(i).columnname --> where i is row number	},		//Mona's Methods	insert:function(tile,callback)	{	   ID = tile.id;	   positionX = tile.position.x;	   positionY = tile.position.y;	   ImgID = tile.imageId;	   cityID = tile.cityId;	   companyID = tile.companyId;	   completedProID = tile.CompletedProjectId;	   UnderconstructionProID = tile.UnderConstructionProjectId;	   pricelevel = tile.priceLevel;	   Isdrawable = tile.isDrawable;	   Isbuildable = tile.isBuildable;	   new DAL().executeQuery("Insert into Tile (PositionX,PositionY,ImageId,CityId,CompanyId,CompletedProjectId,UnderConstructionPojectId,PriceLevel,IsDrawable,IsBuildable) values ("+positionX+","+positionY+","+ImgID+","+cityID+","+companyID+","+completedProID+","+UnderconstructionProID+","+pricelevel+","+Isdrawable+","+Isbuildable+")",function(result)					{			tile.id=result.insertId;			if(typeof(callback)!='undefined')			{				callback(tile);			}		});	},		remove:function(ID)	{	     new DAL().executeQuery("Delete from Tile where Id="+ID,function(result){});	},		getTileImage:function(imgID,callback)	{		var self=this;		new DAL().executeQuery("select ti.Id, ti.ImageName,li.ImagePath from TileImage as ti, LargeImages as li where ti.LargeImageID=li.Id and ti.Id="+imgID,function(result){new Image().map(result,callback);});		},	getCompletedProjectImage:function(projId)	{		var self=this;		new DAL().executeQuery("select pi.Id, pi.ImageName,li.ImagePath from CompletedProject as cp, BaseProject as bp LargeImages as li, ProjectImage as pi, LargeImages li where cp.BaseProjectId=bp.Id and bp.ImageId=pi.Id and pi.LargeImageId=li.Id where cp.Id="+projId,function(result){callback(result);});		},				//Omnia's Methods		upDate:function(Tile,callback)	{		var self = this;		new DAL().executeQuery("update Tile set UnderConstructionProjectId ="+Tile.underconstructionProject.id+",CityId="+Tile.cityId+",CompanyId="+Tile.companyId+",CompletedProjectId="+Tile.CompletedProjectId +",PriceLevel="+Tile.priceLevel+",IsDrawable="+Tile.isDrawable +" where Tile.Id ="+Tile.id		,function(){			if(typeof(callback) != "undefined")				{				 callback(Tile);				}			}		,function(err){console.log(err)});						},			//Moamen's Methods					//Adel's Methods		getTileById:function(tid,callback)	{		new DAL().executeQuery("select * from Tile where Id="+tid,function(result){new Tile().map(result,callback);},function(err){console.log(err);});	}			//Joe's Methods					//Oss's Methods		});